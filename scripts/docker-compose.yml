version: '3.9'

# project name
name: ${PROJECT_NAME}

# volumes      
volumes:
  pgadmin4-data:
  postgres-data:
  geoserver-data:
    
# services
services:

  # database  
  postgres:
    image: kartoza/postgis:${POSTGRES_VERSION}
    container_name: ${PROJECT_NAME}_postgres
    ports:
      - ${POSTGRES_PORT}:5432
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # init db script
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ALLOW_IP_RANGE=${ALLOW_IP_RANGE}
    healthcheck:
      test: "PGPASSWORD=${POSTGRES_PASSWORD} pg_isready -h 127.0.0.1 -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
      interval: 10s
      timeout: 5s
      retries: 3


  # database administrator
  pgadmin4:
    image: dpage/pgadmin4
    container_name: ${PROJECT_NAME}_pgadmin4
    ports:
      - ${PGADMIN_PORT}:80
    restart: always      
    volumes:
      - ./config/servers.json:/pgadmin4/servers.json
      - pgadmin4-data:/var/lib/pgadmin
    environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres
      
  # identity provider      
  keycloak:
    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION}
    container_name: ${PROJECT_NAME}_keycloak
    ports:
      - ${KEYCLOAK_PORT}:8080
    volumes:
      # import realm
      - ./config/gis-realm.json:/opt/keycloak/data/import/realm.json            
    restart: always
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${KEYCLOAK_DB}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KC_LOG_LEVEL: info
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      PROXY_ADDRESS_FORWARDING: "true"
    command:  
      - start-dev
      - --import-realm
    depends_on:
      - postgres

  # geoserver
  geoserver:
    image: kartoza/geoserver:${GS_VERSION}
    container_name: ${PROJECT_NAME}_geoserver
    volumes:
      - geoserver-data:/opt/geoserver/data_dir
      - ./config/web.xml:/usr/local/tomcat/conf/web.xml
    ports:
      - ${GEOSERVER_PORT}:8080
    restart: always
    environment:
      - GEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR}
      - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
      - GEOWEBCACHE_CACHE_DIR=${GEOWEBCACHE_CACHE_DIR}
      - INITIAL_MEMORY=${INITIAL_MEMORY}
      - MAXIMUM_MEMORY=${MAXIMUM_MEMORY}
      - STABLE_EXTENSIONS=${STABLE_EXTENSIONS}
      - COMMUNITY_EXTENSIONS=${COMMUNITY_EXTENSIONS}
      - GEOSERVER_CONTEXT_ROOT=${GEOSERVER_CONTEXT_ROOT}
    depends_on:
      - postgres
    healthcheck:
      test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null -u ${GEOSERVER_ADMIN_USER}:'${GEOSERVER_ADMIN_PASSWORD}' http://localhost:8080/geoserver/rest/about/version.xml"
      interval: 1m30s
      timeout: 10s
      retries: 3